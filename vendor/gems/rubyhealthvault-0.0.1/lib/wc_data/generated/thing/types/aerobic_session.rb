# -*- ruby -*-
#--
# Copyright 2008 Danny Coates, Ashkan Farhadtouski
# All rights reserved.
# See LICENSE for permissions.
#++
# AUTOGENERATED ComplexType

module HealthVault
  module WCData
  module Thing
  module Types
  
      class Aerobicsession < ComplexType
        
  
			 
			 
       
        
        #<b>summary</b>: The type of activity for the session.
#<b>remarks</b>: The mode is the type of activity for the session, like biking, running, etc. The most common activities are part the of the Microsoft Health Lexicon and should be referenced using the code retrieved by calling GetVocabulary with "aerobic-activities" as the vocabulary name.
#<b>preferred-vocabulary</b>: aerobic-activities
#<em>value</em> is a HealthVault::WCData::Thing::Types::Codablevalue
        def mode=(value)
          @children['mode'][:value] = value
        end
        
        #<b>returns</b>: a HealthVault::WCData::Thing::Types::Codablevalue
        def mode
          return @children['mode'][:value]
        end
       
  
			 
			 
       
        
        #<b>summary</b>: The distance covered in the session.
#<b>remarks</b>: Distances are stored in meters. The application must convert the distance entered by the user into meters and should also store the distance and units entered by the user in the display-value so that it can be displayed to the user in their preferred unit of measure when viewing the data.
#<em>value</em> is a HealthVault::WCData::Thing::Types::Lengthvalue
        def distance=(value)
          @children['distance'][:value] = value
        end
        
        #<b>returns</b>: a HealthVault::WCData::Thing::Types::Lengthvalue
        def distance
          return @children['distance'][:value]
        end
       
  
			 
			 
       
        
        #<b>summary</b>: The duration of the session in minutes.
#<em>value</em> is a HealthVault::WCData::Thing::Types::PositiveDouble
        def minutes=(value)
          @children['minutes'][:value] = value
        end
        
        #<b>returns</b>: a HealthVault::WCData::Thing::Types::PositiveDouble
        def minutes
          return @children['minutes'][:value]
        end
       
  
			 
			 
       
        
        #<b>summary</b>: The subjective average intensity of the session.
#<b>remarks</b>: Intensity is measured on a scale from one to five where one is easy and five is the most intense.
#<em>value</em> is a HealthVault::WCData::Thing::Types::Onetofive
        def intensity=(value)
          @children['intensity'][:value] = value
        end
        
        #<b>returns</b>: a HealthVault::WCData::Thing::Types::Onetofive
        def intensity
          return @children['intensity'][:value]
        end
       
  
			 
			 
       
        
        #<b>summary</b>: The highest heart rate reached during the session.
#<b>remarks</b>: The peak heart rate for a session differs from the person's maximum heart rate in that a person most likely will not reach their maximum heart rate during an aerobic session. This measurement defines the highest heart rate recorded during the session.
#<em>value</em> is a String
        def peak_heartrate=(value)
          @children['peak-heartrate'][:value] = value
        end
        
        #<b>returns</b>: a String
        def peak_heartrate
          return @children['peak-heartrate'][:value]
        end
       
  
			 
			 
       
        
        #<b>summary</b>: The average heart rate reached during the session.
#<em>value</em> is a String
        def avg_heartrate=(value)
          @children['avg-heartrate'][:value] = value
        end
        
        #<b>returns</b>: a String
        def avg_heartrate
          return @children['avg-heartrate'][:value]
        end
       
  
			 
			 
       
        
        #<b>summary</b>: The minimum heart rate reached during the session.
#<b>remarks</b>: This is measured in beats per minute.
#<em>value</em> is a String
        def min_heartrate=(value)
          @children['min-heartrate'][:value] = value
        end
        
        #<b>returns</b>: a String
        def min_heartrate
          return @children['min-heartrate'][:value]
        end
       
  
			 
			 
       
        
        #<b>summary</b>: The food energy expended during the session.
#<b>remarks</b>: This is measured in kilojoules .
#<em>value</em> is a HealthVault::WCData::Thing::Types::PositiveDouble
        def energy=(value)
          @children['energy'][:value] = value
        end
        
        #<b>returns</b>: a HealthVault::WCData::Thing::Types::PositiveDouble
        def energy
          return @children['energy'][:value]
        end
       
  
			 
			 
       
        
        #<b>summary</b>: The food energy burned from fat during the session.
#<b>remarks</b>: This is measured in kilojoules.
#<em>value</em> is a HealthVault::WCData::Thing::Types::PositiveDouble
        def energy_from_fat=(value)
          @children['energy-from-fat'][:value] = value
        end
        
        #<b>returns</b>: a HealthVault::WCData::Thing::Types::PositiveDouble
        def energy_from_fat
          return @children['energy-from-fat'][:value]
        end
       
  
			 
			 
       
        
        #<b>summary</b>: The maximum speed achieved during the session.
#<b>remarks</b>: This is measured in meters per second.
#<em>value</em> is a HealthVault::WCData::Thing::Types::Speedvalue
        def peak_speed=(value)
          @children['peak-speed'][:value] = value
        end
        
        #<b>returns</b>: a HealthVault::WCData::Thing::Types::Speedvalue
        def peak_speed
          return @children['peak-speed'][:value]
        end
       
  
			 
			 
       
        
        #<b>summary</b>: The average speed achieved during the session.
#<b>remarks</b>: This is measured in meters per second.
#<em>value</em> is a HealthVault::WCData::Thing::Types::Speedvalue
        def avg_speed=(value)
          @children['avg-speed'][:value] = value
        end
        
        #<b>returns</b>: a HealthVault::WCData::Thing::Types::Speedvalue
        def avg_speed
          return @children['avg-speed'][:value]
        end
       
  
			 
			 
       
        
        #<b>summary</b>: The minimum speed achieved during the session.
#<b>remarks</b>: This is measured in meters per second.
#<em>value</em> is a HealthVault::WCData::Thing::Types::Speedvalue
        def min_speed=(value)
          @children['min-speed'][:value] = value
        end
        
        #<b>returns</b>: a HealthVault::WCData::Thing::Types::Speedvalue
        def min_speed
          return @children['min-speed'][:value]
        end
       
  
			 
			 
       
        
        #<b>summary</b>: The maximum pace achieved during the session.
#<b>remarks</b>: This is measured in seconds per 100 meters.
#<em>value</em> is a HealthVault::WCData::Thing::Types::Pacevalue
        def peak_pace=(value)
          @children['peak-pace'][:value] = value
        end
        
        #<b>returns</b>: a HealthVault::WCData::Thing::Types::Pacevalue
        def peak_pace
          return @children['peak-pace'][:value]
        end
       
  
			 
			 
       
        
        #<b>summary</b>: The average pace achieved during the session.
#<b>remarks</b>: This is measured in seconds per 100 meters.
#<em>value</em> is a HealthVault::WCData::Thing::Types::Pacevalue
        def avg_pace=(value)
          @children['avg-pace'][:value] = value
        end
        
        #<b>returns</b>: a HealthVault::WCData::Thing::Types::Pacevalue
        def avg_pace
          return @children['avg-pace'][:value]
        end
       
  
			 
			 
       
        
        #<b>summary</b>: The minimum pace achieved during the session.
#<b>remarks</b>: This is measured in seconds per 100 meters.
#<em>value</em> is a HealthVault::WCData::Thing::Types::Pacevalue
        def min_pace=(value)
          @children['min-pace'][:value] = value
        end
        
        #<b>returns</b>: a HealthVault::WCData::Thing::Types::Pacevalue
        def min_pace
          return @children['min-pace'][:value]
        end
       
  
			 
			 
       
        
        #<b>summary</b>: The maximum power achieved during the session.
#<b>remarks</b>: This is measured in watts.
#<em>value</em> is a HealthVault::WCData::Thing::Types::Powervalue
        def peak_power=(value)
          @children['peak-power'][:value] = value
        end
        
        #<b>returns</b>: a HealthVault::WCData::Thing::Types::Powervalue
        def peak_power
          return @children['peak-power'][:value]
        end
       
  
			 
			 
       
        
        #<b>summary</b>: The average power achieved during the session.
#<b>remarks</b>: This is measured in watts.
#<em>value</em> is a HealthVault::WCData::Thing::Types::Powervalue
        def avg_power=(value)
          @children['avg-power'][:value] = value
        end
        
        #<b>returns</b>: a HealthVault::WCData::Thing::Types::Powervalue
        def avg_power
          return @children['avg-power'][:value]
        end
       
  
			 
			 
       
        
        #<b>summary</b>: The minimum power achieved during the session.
#<b>remarks</b>: This is measured in watts.
#<em>value</em> is a HealthVault::WCData::Thing::Types::Powervalue
        def min_power=(value)
          @children['min-power'][:value] = value
        end
        
        #<b>returns</b>: a HealthVault::WCData::Thing::Types::Powervalue
        def min_power
          return @children['min-power'][:value]
        end
       
  
			 
			 
       
        
        #<b>summary</b>: The maximum torque achieved during the session.
#<b>remarks</b>: This is measured in newton meters.
#<em>value</em> is a HealthVault::WCData::Thing::Types::Torquevalue
        def peak_torque=(value)
          @children['peak-torque'][:value] = value
        end
        
        #<b>returns</b>: a HealthVault::WCData::Thing::Types::Torquevalue
        def peak_torque
          return @children['peak-torque'][:value]
        end
       
  
			 
			 
       
        
        #<b>summary</b>: The average torque achieved during the session.
#<b>remarks</b>: This is measured in newton meters.
#<em>value</em> is a HealthVault::WCData::Thing::Types::Torquevalue
        def avg_torque=(value)
          @children['avg-torque'][:value] = value
        end
        
        #<b>returns</b>: a HealthVault::WCData::Thing::Types::Torquevalue
        def avg_torque
          return @children['avg-torque'][:value]
        end
       
  
			 
			 
       
        
        #<b>summary</b>: The minimum torque achieved during the session.
#<b>remarks</b>: This is measured in newton meters.
#<em>value</em> is a HealthVault::WCData::Thing::Types::Torquevalue
        def min_torque=(value)
          @children['min-torque'][:value] = value
        end
        
        #<b>returns</b>: a HealthVault::WCData::Thing::Types::Torquevalue
        def min_torque
          return @children['min-torque'][:value]
        end
       
  
			 
			 
       
        
        #<b>summary</b>: The power output balance between left and right strokes.
#<b>remarks</b>: This is measured as a percentage (%) relating to the left. For example, a value of 30 indicates that 30% of the power came from the left, while 70% came from the right.
#<em>value</em> is a HealthVault::WCData::Thing::Types::Percentage
        def left_right_balance=(value)
          @children['left-right-balance'][:value] = value
        end
        
        #<b>returns</b>: a HealthVault::WCData::Thing::Types::Percentage
        def left_right_balance
          return @children['left-right-balance'][:value]
        end
       
  
			 
			 
       
        
        #<b>summary</b>: The maximum cadence achieved during the session. T
#<b>remarks</b>: his is measured in revolutions per minute (rpm).
#<em>value</em> is a HealthVault::WCData::Thing::Types::PositiveDouble
        def peak_cadence=(value)
          @children['peak-cadence'][:value] = value
        end
        
        #<b>returns</b>: a HealthVault::WCData::Thing::Types::PositiveDouble
        def peak_cadence
          return @children['peak-cadence'][:value]
        end
       
  
			 
			 
       
        
        #<b>summary</b>: The average cadence achieved during the session.
#<b>remarks</b>: This is measured in revolutions per minute (rpm).
#<em>value</em> is a HealthVault::WCData::Thing::Types::PositiveDouble
        def avg_cadence=(value)
          @children['avg-cadence'][:value] = value
        end
        
        #<b>returns</b>: a HealthVault::WCData::Thing::Types::PositiveDouble
        def avg_cadence
          return @children['avg-cadence'][:value]
        end
       
  
			 
			 
       
        
        #<b>summary</b>: The minimum cadence achieved during the session.
#<b>remarks</b>: This is measured in revolutions per minute (rpm).
#<em>value</em> is a HealthVault::WCData::Thing::Types::PositiveDouble
        def min_cadence=(value)
          @children['min-cadence'][:value] = value
        end
        
        #<b>returns</b>: a HealthVault::WCData::Thing::Types::PositiveDouble
        def min_cadence
          return @children['min-cadence'][:value]
        end
       
  
			 
			 
       
        
        #<b>summary</b>: The maximum temperature achieved during the session.
#<b>remarks</b>: This is measured in degrees Celsius (C).
#<em>value</em> is a HealthVault::WCData::Thing::Types::Temperaturevalue
        def peak_temperature=(value)
          @children['peak-temperature'][:value] = value
        end
        
        #<b>returns</b>: a HealthVault::WCData::Thing::Types::Temperaturevalue
        def peak_temperature
          return @children['peak-temperature'][:value]
        end
       
  
			 
			 
       
        
        #<b>summary</b>: The average temperature achieved during the session.
#<b>remarks</b>: This is measured in degrees Celsius (C).
#<em>value</em> is a HealthVault::WCData::Thing::Types::Temperaturevalue
        def avg_temperature=(value)
          @children['avg-temperature'][:value] = value
        end
        
        #<b>returns</b>: a HealthVault::WCData::Thing::Types::Temperaturevalue
        def avg_temperature
          return @children['avg-temperature'][:value]
        end
       
  
			 
			 
       
        
        #<b>summary</b>: The minimum temperature achieved during the session.
#<b>remarks</b>: This is measured in degrees Celsius (C).
#<em>value</em> is a HealthVault::WCData::Thing::Types::Temperaturevalue
        def min_temperature=(value)
          @children['min-temperature'][:value] = value
        end
        
        #<b>returns</b>: a HealthVault::WCData::Thing::Types::Temperaturevalue
        def min_temperature
          return @children['min-temperature'][:value]
        end
       
  
			 
			 
       
        
        #<b>summary</b>: The maximum altitude achieved during the session.
#<b>remarks</b>: This is measured in meters above mean sea level.
#<em>value</em> is a HealthVault::WCData::Thing::Types::Altitudevalue
        def peak_altitude=(value)
          @children['peak-altitude'][:value] = value
        end
        
        #<b>returns</b>: a HealthVault::WCData::Thing::Types::Altitudevalue
        def peak_altitude
          return @children['peak-altitude'][:value]
        end
       
  
			 
			 
       
        
        #<b>summary</b>: The average altitude achieved during the session.
#<b>remarks</b>: This is measured in meters above mean sea level.
#<em>value</em> is a HealthVault::WCData::Thing::Types::Altitudevalue
        def avg_altitude=(value)
          @children['avg-altitude'][:value] = value
        end
        
        #<b>returns</b>: a HealthVault::WCData::Thing::Types::Altitudevalue
        def avg_altitude
          return @children['avg-altitude'][:value]
        end
       
  
			 
			 
       
        
        #<b>summary</b>: The minimum altitude achieved during the session.
#<b>remarks</b>: This is measured in meters above mean sea level.
#<em>value</em> is a HealthVault::WCData::Thing::Types::Altitudevalue
        def min_altitude=(value)
          @children['min-altitude'][:value] = value
        end
        
        #<b>returns</b>: a HealthVault::WCData::Thing::Types::Altitudevalue
        def min_altitude
          return @children['min-altitude'][:value]
        end
       
  
			 
			 
       
        
        #<b>summary</b>: The gain in elevation achieved during the session.
#<b>remarks</b>: This is measured in meters.
#<em>value</em> is a HealthVault::WCData::Thing::Types::Lengthvalue
        def elevation_gain=(value)
          @children['elevation-gain'][:value] = value
        end
        
        #<b>returns</b>: a HealthVault::WCData::Thing::Types::Lengthvalue
        def elevation_gain
          return @children['elevation-gain'][:value]
        end
       
  
			 
			 
       
        
        #<b>summary</b>: The loss in elevation achieved during the session.
#<b>remarks</b>: This is measured in meters.
#<em>value</em> is a HealthVault::WCData::Thing::Types::Lengthvalue
        def elevation_loss=(value)
          @children['elevation-loss'][:value] = value
        end
        
        #<b>returns</b>: a HealthVault::WCData::Thing::Types::Lengthvalue
        def elevation_loss
          return @children['elevation-loss'][:value]
        end
       
  
			 
			 
       
        
        #<b>summary</b>: Number of steps taken in this session.
#<em>value</em> is a String
        def number_of_steps=(value)
          @children['number-of-steps'][:value] = value
        end
        
        #<b>returns</b>: a String
        def number_of_steps
          return @children['number-of-steps'][:value]
        end
       
  
			 
			 
       
        
        #<b>summary</b>: Total steps taken in the aerobic activity range.
#<b>remarks</b>: Total steps taken in the aerobic activity range. This will be less than or equal to the total steps taken given that the participant may not remain in the aerobic activity range for the entire session.
#<em>value</em> is a String
        def number_of_aerobic_steps=(value)
          @children['number-of-aerobic-steps'][:value] = value
        end
        
        #<b>returns</b>: a String
        def number_of_aerobic_steps
          return @children['number-of-aerobic-steps'][:value]
        end
       
  
			 
			 
       
        
        #<b>summary</b>: Total duration spent in the aerobic activity range.
#<b>remarks</b>: This item will be recorded in units of minutes.
#<em>value</em> is a HealthVault::WCData::Thing::Types::NonNegativeDouble
        def aerobic_step_minutes=(value)
          @children['aerobic-step-minutes'][:value] = value
        end
        
        #<b>returns</b>: a HealthVault::WCData::Thing::Types::NonNegativeDouble
        def aerobic_step_minutes
          return @children['aerobic-step-minutes'][:value]
        end
       
  
      
        def initialize
          super
          self.tag_name = 'aerobic-session'
        
          
          @children['mode'] = {:name => 'mode', :class => HealthVault::WCData::Thing::Types::Codablevalue, :value => nil, :min => 0, :max => 1, :order => 1, :place => :element, :choice => 0 }
            
          
        
          
          @children['distance'] = {:name => 'distance', :class => HealthVault::WCData::Thing::Types::Lengthvalue, :value => nil, :min => 0, :max => 1, :order => 2, :place => :element, :choice => 0 }
            
          
        
          
          @children['minutes'] = {:name => 'minutes', :class => HealthVault::WCData::Thing::Types::PositiveDouble, :value => nil, :min => 0, :max => 1, :order => 3, :place => :element, :choice => 0 }
            
          
        
          
          @children['intensity'] = {:name => 'intensity', :class => HealthVault::WCData::Thing::Types::Onetofive, :value => nil, :min => 0, :max => 1, :order => 4, :place => :element, :choice => 0 }
            
          
        
          
          @children['peak-heartrate'] = {:name => 'peak-heartrate', :class => String, :value => nil, :min => 0, :max => 1, :order => 5, :place => :element, :choice => 0 }
            
          
        
          
          @children['avg-heartrate'] = {:name => 'avg-heartrate', :class => String, :value => nil, :min => 0, :max => 1, :order => 6, :place => :element, :choice => 0 }
            
          
        
          
          @children['min-heartrate'] = {:name => 'min-heartrate', :class => String, :value => nil, :min => 0, :max => 1, :order => 7, :place => :element, :choice => 0 }
            
          
        
          
          @children['energy'] = {:name => 'energy', :class => HealthVault::WCData::Thing::Types::PositiveDouble, :value => nil, :min => 0, :max => 1, :order => 8, :place => :element, :choice => 0 }
            
          
        
          
          @children['energy-from-fat'] = {:name => 'energy-from-fat', :class => HealthVault::WCData::Thing::Types::PositiveDouble, :value => nil, :min => 0, :max => 1, :order => 9, :place => :element, :choice => 0 }
            
          
        
          
          @children['peak-speed'] = {:name => 'peak-speed', :class => HealthVault::WCData::Thing::Types::Speedvalue, :value => nil, :min => 0, :max => 1, :order => 10, :place => :element, :choice => 0 }
            
          
        
          
          @children['avg-speed'] = {:name => 'avg-speed', :class => HealthVault::WCData::Thing::Types::Speedvalue, :value => nil, :min => 0, :max => 1, :order => 11, :place => :element, :choice => 0 }
            
          
        
          
          @children['min-speed'] = {:name => 'min-speed', :class => HealthVault::WCData::Thing::Types::Speedvalue, :value => nil, :min => 0, :max => 1, :order => 12, :place => :element, :choice => 0 }
            
          
        
          
          @children['peak-pace'] = {:name => 'peak-pace', :class => HealthVault::WCData::Thing::Types::Pacevalue, :value => nil, :min => 0, :max => 1, :order => 13, :place => :element, :choice => 0 }
            
          
        
          
          @children['avg-pace'] = {:name => 'avg-pace', :class => HealthVault::WCData::Thing::Types::Pacevalue, :value => nil, :min => 0, :max => 1, :order => 14, :place => :element, :choice => 0 }
            
          
        
          
          @children['min-pace'] = {:name => 'min-pace', :class => HealthVault::WCData::Thing::Types::Pacevalue, :value => nil, :min => 0, :max => 1, :order => 15, :place => :element, :choice => 0 }
            
          
        
          
          @children['peak-power'] = {:name => 'peak-power', :class => HealthVault::WCData::Thing::Types::Powervalue, :value => nil, :min => 0, :max => 1, :order => 16, :place => :element, :choice => 0 }
            
          
        
          
          @children['avg-power'] = {:name => 'avg-power', :class => HealthVault::WCData::Thing::Types::Powervalue, :value => nil, :min => 0, :max => 1, :order => 17, :place => :element, :choice => 0 }
            
          
        
          
          @children['min-power'] = {:name => 'min-power', :class => HealthVault::WCData::Thing::Types::Powervalue, :value => nil, :min => 0, :max => 1, :order => 18, :place => :element, :choice => 0 }
            
          
        
          
          @children['peak-torque'] = {:name => 'peak-torque', :class => HealthVault::WCData::Thing::Types::Torquevalue, :value => nil, :min => 0, :max => 1, :order => 19, :place => :element, :choice => 0 }
            
          
        
          
          @children['avg-torque'] = {:name => 'avg-torque', :class => HealthVault::WCData::Thing::Types::Torquevalue, :value => nil, :min => 0, :max => 1, :order => 20, :place => :element, :choice => 0 }
            
          
        
          
          @children['min-torque'] = {:name => 'min-torque', :class => HealthVault::WCData::Thing::Types::Torquevalue, :value => nil, :min => 0, :max => 1, :order => 21, :place => :element, :choice => 0 }
            
          
        
          
          @children['left-right-balance'] = {:name => 'left-right-balance', :class => HealthVault::WCData::Thing::Types::Percentage, :value => nil, :min => 0, :max => 1, :order => 22, :place => :element, :choice => 0 }
            
          
        
          
          @children['peak-cadence'] = {:name => 'peak-cadence', :class => HealthVault::WCData::Thing::Types::PositiveDouble, :value => nil, :min => 0, :max => 1, :order => 23, :place => :element, :choice => 0 }
            
          
        
          
          @children['avg-cadence'] = {:name => 'avg-cadence', :class => HealthVault::WCData::Thing::Types::PositiveDouble, :value => nil, :min => 0, :max => 1, :order => 24, :place => :element, :choice => 0 }
            
          
        
          
          @children['min-cadence'] = {:name => 'min-cadence', :class => HealthVault::WCData::Thing::Types::PositiveDouble, :value => nil, :min => 0, :max => 1, :order => 25, :place => :element, :choice => 0 }
            
          
        
          
          @children['peak-temperature'] = {:name => 'peak-temperature', :class => HealthVault::WCData::Thing::Types::Temperaturevalue, :value => nil, :min => 0, :max => 1, :order => 26, :place => :element, :choice => 0 }
            
          
        
          
          @children['avg-temperature'] = {:name => 'avg-temperature', :class => HealthVault::WCData::Thing::Types::Temperaturevalue, :value => nil, :min => 0, :max => 1, :order => 27, :place => :element, :choice => 0 }
            
          
        
          
          @children['min-temperature'] = {:name => 'min-temperature', :class => HealthVault::WCData::Thing::Types::Temperaturevalue, :value => nil, :min => 0, :max => 1, :order => 28, :place => :element, :choice => 0 }
            
          
        
          
          @children['peak-altitude'] = {:name => 'peak-altitude', :class => HealthVault::WCData::Thing::Types::Altitudevalue, :value => nil, :min => 0, :max => 1, :order => 29, :place => :element, :choice => 0 }
            
          
        
          
          @children['avg-altitude'] = {:name => 'avg-altitude', :class => HealthVault::WCData::Thing::Types::Altitudevalue, :value => nil, :min => 0, :max => 1, :order => 30, :place => :element, :choice => 0 }
            
          
        
          
          @children['min-altitude'] = {:name => 'min-altitude', :class => HealthVault::WCData::Thing::Types::Altitudevalue, :value => nil, :min => 0, :max => 1, :order => 31, :place => :element, :choice => 0 }
            
          
        
          
          @children['elevation-gain'] = {:name => 'elevation-gain', :class => HealthVault::WCData::Thing::Types::Lengthvalue, :value => nil, :min => 0, :max => 1, :order => 32, :place => :element, :choice => 0 }
            
          
        
          
          @children['elevation-loss'] = {:name => 'elevation-loss', :class => HealthVault::WCData::Thing::Types::Lengthvalue, :value => nil, :min => 0, :max => 1, :order => 33, :place => :element, :choice => 0 }
            
          
        
          
          @children['number-of-steps'] = {:name => 'number-of-steps', :class => String, :value => nil, :min => 0, :max => 1, :order => 34, :place => :element, :choice => 0 }
            
          
        
          
          @children['number-of-aerobic-steps'] = {:name => 'number-of-aerobic-steps', :class => String, :value => nil, :min => 0, :max => 1, :order => 35, :place => :element, :choice => 0 }
            
          
        
          
          @children['aerobic-step-minutes'] = {:name => 'aerobic-step-minutes', :class => HealthVault::WCData::Thing::Types::NonNegativeDouble, :value => nil, :min => 0, :max => 1, :order => 36, :place => :element, :choice => 0 }
            
          
        
        end
      end
  end
  end
  
  end
end
