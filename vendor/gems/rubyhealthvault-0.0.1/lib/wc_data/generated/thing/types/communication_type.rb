# -*- ruby -*-
#--
# Copyright 2008 Danny Coates, Ashkan Farhadtouski
# All rights reserved.
# See LICENSE for permissions.
#++
# AUTOGENERATED ComplexType

module HealthVault
  module WCData
  module Thing
  module Types
  
      class Communicationtype < ComplexType
        
  
			 
			 
       
        #<b>REQUIRED</b>
        #<b>summary</b>: Defines medium of communication used.
#<b>preferred-vocabulary</b>: communication-medium
#<em>value</em> is a HealthVault::WCData::Thing::Types::Codablevalue
        def communication_medium=(value)
          @children['communication-medium'][:value] = value
        end
        
        #<b>returns</b>: a HealthVault::WCData::Thing::Types::Codablevalue
        def communication_medium
          return @children['communication-medium'][:value]
        end
       
  
			 
			 
       
        
        #<b>summary</b>: Defines priority of communication medium.
#<b>remarks</b>: Preferred medium is lower value, such as phone-1, phone-2, etc.
#<em>value</em> is a String
        def priority=(value)
          @children['priority'][:value] = value
        end
        
        #<b>returns</b>: a String
        def priority
          return @children['priority'][:value]
        end
       
  
			 
			 
       
        
        #<b>summary</b>: Defines class of communication used.
#<b>preferred-vocabulary</b>: communication-class
#<em>value</em> is a HealthVault::WCData::Thing::Types::Codablevalue
        def class=(value)
          @children['class'][:value] = value
        end
        
        #<b>returns</b>: a HealthVault::WCData::Thing::Types::Codablevalue
        def class
          return @children['class'][:value]
        end
       
  
			 
			 
       
        #<b>REQUIRED</b>
        #<b>summary</b>: Detailed value of communication type.
#<b>summary</b>: Examples are phone number, fax number, etc.
#<em>value</em> is a String
        def value=(value)
          @children['value'][:value] = value
        end
        
        #<b>returns</b>: a String
        def value
          return @children['value'][:value]
        end
       
  
      
        def initialize
          super
          self.tag_name = 'communication-type'
        
          
          @children['communication-medium'] = {:name => 'communication-medium', :class => HealthVault::WCData::Thing::Types::Codablevalue, :value => nil, :min => 1, :max => 1, :order => 1, :place => :element, :choice => 0 }
            
          @children['communication-medium'][:value] = HealthVault::WCData::Thing::Types::Codablevalue.new
            
          
        
          
          @children['priority'] = {:name => 'priority', :class => String, :value => nil, :min => 0, :max => 1, :order => 2, :place => :element, :choice => 0 }
            
          
        
          
          @children['class'] = {:name => 'class', :class => HealthVault::WCData::Thing::Types::Codablevalue, :value => nil, :min => 0, :max => 1, :order => 3, :place => :element, :choice => 0 }
            
          
        
          
          @children['value'] = {:name => 'value', :class => String, :value => nil, :min => 1, :max => 1, :order => 4, :place => :element, :choice => 0 }
            
          @children['value'][:value] = String.new
            
          
        
        end
      end
  end
  end
  
  end
end
