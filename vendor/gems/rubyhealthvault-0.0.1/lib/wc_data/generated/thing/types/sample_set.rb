# -*- ruby -*-
#--
# Copyright 2008 Danny Coates, Ashkan Farhadtouski
# All rights reserved.
# See LICENSE for permissions.
#++
# AUTOGENERATED ComplexType

module HealthVault
  module WCData
  module Thing
  module Types
  
      class Sampleset < ComplexType
        
  
			 
			 
       
        #<b>REQUIRED</b>
        #<b>summary</b>: Sample set base time from which samples are offset.
#<em>value</em> is a HealthVault::WCData::Dates::Datetime
        def base_time=(value)
          @children['base-time'][:value] = value
        end
        
        #<b>returns</b>: a HealthVault::WCData::Dates::Datetime
        def base_time
          return @children['base-time'][:value]
        end
       
  
			 
			 
       
        #<b>REQUIRED</b>
        #<b>summary</b>: The unit that the value is stored in.
#<b>remarks</b>: Each sample contains a value. All samples in a sample set should be stored using the same units. This value is a text description of the units the sample value is stored in. Use the "sample-unit-code" to describe the units as a dictionary code.
#<em>value</em> is a String
        def sample_unit=(value)
          @children['sample-unit'][:value] = value
        end
        
        #<b>returns</b>: a String
        def sample_unit
          return @children['sample-unit'][:value]
        end
       
  
			 
			 
       
        #<b>REQUIRED</b>
        #<b>summary</b>: The dictionary code for the unit that the value is stored in.
#<b>remarks</b>: Each sample contains a value. All samples in a sample set should be stored using the same units.
#<b>preferred-vocabulary</b>: Contact the HealthVault team to help define this vocabulary.
#<em>value</em> is a HealthVault::WCData::Thing::Types::Codablevalue
        def sample_unit_code=(value)
          @children['sample-unit-code'][:value] = value
        end
        
        #<b>returns</b>: a HealthVault::WCData::Thing::Types::Codablevalue
        def sample_unit_code
          return @children['sample-unit-code'][:value]
        end
       
  
			 
			 
       
        #<em>value</em> is a HealthVault::WCData::Thing::Types::Sample
        def add_sample(value)
          @children['sample'][:value] << value
        end
        
        #<em>value</em> is a #HealthVault::WCData::Thing::Types::Sample
        def remove_sample(value)
            @children['sample'][:value].delete(value)
        end
        
        
        #<b>summary</b>: Sample set samples.
#<b>returns</b>: a HealthVault::WCData::Thing::Types::Sample Array
        def sample
          return @children['sample'][:value]
        end
       
  
      
        def initialize
          super
          self.tag_name = 'sample-set'
        
          
          @children['base-time'] = {:name => 'base-time', :class => HealthVault::WCData::Dates::Datetime, :value => nil, :min => 1, :max => 1, :order => 1, :place => :element, :choice => 0 }
            
          @children['base-time'][:value] = HealthVault::WCData::Dates::Datetime.new
            
          
        
          
          @children['sample-unit'] = {:name => 'sample-unit', :class => String, :value => nil, :min => 1, :max => 1, :order => 2, :place => :element, :choice => 0 }
            
          @children['sample-unit'][:value] = String.new
            
          
        
          
          @children['sample-unit-code'] = {:name => 'sample-unit-code', :class => HealthVault::WCData::Thing::Types::Codablevalue, :value => nil, :min => 1, :max => 1, :order => 3, :place => :element, :choice => 0 }
            
          @children['sample-unit-code'][:value] = HealthVault::WCData::Thing::Types::Codablevalue.new
            
          
        
          
          @children['sample'] = {:name => 'sample', :class => HealthVault::WCData::Thing::Types::Sample, :value => Array.new, :min => 0, :max => 999999, :order => 4, :place => :element, :choice => 0 }
          
        
        end
      end
  end
  end
  
  end
end
