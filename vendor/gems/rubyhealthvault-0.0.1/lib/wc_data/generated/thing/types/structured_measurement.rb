# -*- ruby -*-
#--
# Copyright 2008 Danny Coates, Ashkan Farhadtouski
# All rights reserved.
# See LICENSE for permissions.
#++
# AUTOGENERATED ComplexType

module HealthVault
  module WCData
  module Thing
  module Types
  
      class Structuredmeasurement < ComplexType
        
  
			 
			 
       
        #<b>REQUIRED</b>
        #<b>summary</b>: The value of the measurement.
#<em>value</em> is a String
        def value=(value)
          @children['value'][:value] = value
        end
        
        #<b>returns</b>: a String
        def value
          return @children['value'][:value]
        end
       
  
			 
			 
       
        #<b>REQUIRED</b>
        #<b>summary</b>: The units for the measurement.
#<b>remarks</b>: A list of vocabularies may be found in the preferred vocabulary.
#<b>preferred-vocabulary</b>: measurement-unit-sets
#<em>value</em> is a HealthVault::WCData::Thing::Types::Codablevalue
        def units=(value)
          @children['units'][:value] = value
        end
        
        #<b>returns</b>: a HealthVault::WCData::Thing::Types::Codablevalue
        def units
          return @children['units'][:value]
        end
       
  
      
        def initialize
          super
          self.tag_name = 'structured-measurement'
        
          
          @children['value'] = {:name => 'value', :class => String, :value => nil, :min => 1, :max => 1, :order => 1, :place => :element, :choice => 0 }
            
          @children['value'][:value] = String.new
            
          
        
          
          @children['units'] = {:name => 'units', :class => HealthVault::WCData::Thing::Types::Codablevalue, :value => nil, :min => 1, :max => 1, :order => 2, :place => :element, :choice => 0 }
            
          @children['units'][:value] = HealthVault::WCData::Thing::Types::Codablevalue.new
            
          
        
        end
      end
  end
  end
  
  end
end
