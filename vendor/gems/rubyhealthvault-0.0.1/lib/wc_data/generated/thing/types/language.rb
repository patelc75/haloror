# -*- ruby -*-
#--
# Copyright 2008 Danny Coates, Ashkan Farhadtouski
# All rights reserved.
# See LICENSE for permissions.
#++
# AUTOGENERATED ComplexType

module HealthVault
  module WCData
  module Thing
  module Types
  
      class Language < ComplexType
        
  
			 
			 
       
        
        #<b>summary</b>: The language.
#<b>remarks</b>: The Microsoft Health Lexicon defines codes for many of the common spoken languages. In most cases the language should be specified by using the code retrieved from the Microsoft Health Lexicon by calling GetVocabulary with "languages" as the vocabulary name. If the language doesn't exist the Microsoft Health Lexicon the "text" element of the codable value can be used to specify the language.
#<b>preferred-vocabulary</b>: iso:iso639-1
#<em>value</em> is a HealthVault::WCData::Thing::Types::Codablevalue
        def language=(value)
          @children['language'][:value] = value
        end
        
        #<b>returns</b>: a HealthVault::WCData::Thing::Types::Codablevalue
        def language
          return @children['language'][:value]
        end
       
  
			 
			 
       
        
        #<b>summary</b>: States if the language is the primary language of the person.
#<b>remarks</b>: If true, the language is the preferred spoken language of the person.
#<em>value</em> is a String
        def is_primary=(value)
          @children['is-primary'][:value] = value
        end
        
        #<b>returns</b>: a String
        def is_primary
          return @children['is-primary'][:value]
        end
       
  
      
        def initialize
          super
          self.tag_name = 'language'
        
          
          @children['language'] = {:name => 'language', :class => HealthVault::WCData::Thing::Types::Codablevalue, :value => nil, :min => 0, :max => 1, :order => 1, :place => :element, :choice => 0 }
            
          
        
          
          @children['is-primary'] = {:name => 'is-primary', :class => String, :value => nil, :min => 0, :max => 1, :order => 2, :place => :element, :choice => 0 }
            
          
        
        end
      end
  end
  end
  
  end
end
