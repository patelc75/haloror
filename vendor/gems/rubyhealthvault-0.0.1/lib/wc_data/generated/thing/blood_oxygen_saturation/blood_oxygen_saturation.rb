# -*- ruby -*-
#--
# Copyright 2008 Danny Coates, Ashkan Farhadtouski
# All rights reserved.
# See LICENSE for permissions.
#++
# AUTOGENERATED ComplexType

module HealthVault
  module WCData
  module Thing
  module Bloodoxygensaturation
  
      class Bloodoxygensaturation < ComplexType
        
  
			 
			 
       
        #<b>REQUIRED</b>
        #<b>summary</b>: The date and time of this measurement.
#<em>value</em> is a HealthVault::WCData::Dates::Datetime
        def when=(value)
          @children['when'][:value] = value
        end
        
        #<b>returns</b>: a HealthVault::WCData::Dates::Datetime
        def when
          return @children['when'][:value]
        end
       
  
			 
			 
       
        #<b>REQUIRED</b>
        #<b>summary</b>: The measured blood oxygen saturation percentage.
#<em>value</em> is a HealthVault::WCData::Thing::Types::Percentage
        def value=(value)
          @children['value'][:value] = value
        end
        
        #<b>returns</b>: a HealthVault::WCData::Thing::Types::Percentage
        def value
          return @children['value'][:value]
        end
       
  
			 
			 
       
        
        #<b>summary</b>: The technique used to obtain the measurement.
#<b>preferred-vocabulary</b>: blood-oxygen-saturation-measurement-method
#<em>value</em> is a HealthVault::WCData::Thing::Types::Codablevalue
        def measurement_method=(value)
          @children['measurement-method'][:value] = value
        end
        
        #<b>returns</b>: a HealthVault::WCData::Thing::Types::Codablevalue
        def measurement_method
          return @children['measurement-method'][:value]
        end
       
  
			 
			 
       
        
        #<b>summary</b>: Additional information about the measurement.
#<b>remarks</b>: Examples: Incomplete measurement, irregular heartbeat.
#<b>preferred-vocabulary</b>: Contact the HealthVault team to help define this vocabulary.
#<em>value</em> is a HealthVault::WCData::Thing::Types::Codablevalue
        def measurement_flags=(value)
          @children['measurement-flags'][:value] = value
        end
        
        #<b>returns</b>: a HealthVault::WCData::Thing::Types::Codablevalue
        def measurement_flags
          return @children['measurement-flags'][:value]
        end
       
  
      
        def initialize
          super
          self.tag_name = 'blood-oxygen-saturation'
        
          
          @children['when'] = {:name => 'when', :class => HealthVault::WCData::Dates::Datetime, :value => nil, :min => 1, :max => 1, :order => 1, :place => :element, :choice => 0 }
            
          @children['when'][:value] = HealthVault::WCData::Dates::Datetime.new
            
          
        
          
          @children['value'] = {:name => 'value', :class => HealthVault::WCData::Thing::Types::Percentage, :value => nil, :min => 1, :max => 1, :order => 2, :place => :element, :choice => 0 }
            
          @children['value'][:value] = HealthVault::WCData::Thing::Types::Percentage.new
            
          
        
          
          @children['measurement-method'] = {:name => 'measurement-method', :class => HealthVault::WCData::Thing::Types::Codablevalue, :value => nil, :min => 0, :max => 1, :order => 3, :place => :element, :choice => 0 }
            
          
        
          
          @children['measurement-flags'] = {:name => 'measurement-flags', :class => HealthVault::WCData::Thing::Types::Codablevalue, :value => nil, :min => 0, :max => 1, :order => 4, :place => :element, :choice => 0 }
            
          
        
        end
      end
  end
  end
  
  end
end
