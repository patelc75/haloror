# -*- ruby -*-
#--
# Copyright 2008 Danny Coates, Ashkan Farhadtouski
# All rights reserved.
# See LICENSE for permissions.
#++
# AUTOGENERATED ComplexType

module HealthVault
  module WCData
  module Thing
  module Concern
  
      class Concern < ComplexType
        
  
			 
			 
       
        #<b>REQUIRED</b>
        #<b>summary</b>: Description of the concern.
#<b>preferred-vocabulary</b>: concern-description
#<em>value</em> is a HealthVault::WCData::Thing::Types::Codablevalue
        def description=(value)
          @children['description'][:value] = value
        end
        
        #<b>returns</b>: a HealthVault::WCData::Thing::Types::Codablevalue
        def description
          return @children['description'][:value]
        end
       
  
			 
			 
       
        
        #<b>summary</b>: The state of the concern.
#<b>remarks</b>: Examples include active or inactive.
#<b>preferred-vocabulary</b>: concern-status
#<em>value</em> is a HealthVault::WCData::Thing::Types::Codablevalue
        def status=(value)
          @children['status'][:value] = value
        end
        
        #<b>returns</b>: a HealthVault::WCData::Thing::Types::Codablevalue
        def status
          return @children['status'][:value]
        end
       
  
      
        def initialize
          super
          self.tag_name = 'concern'
        
          
          @children['description'] = {:name => 'description', :class => HealthVault::WCData::Thing::Types::Codablevalue, :value => nil, :min => 1, :max => 1, :order => 1, :place => :element, :choice => 0 }
            
          @children['description'][:value] = HealthVault::WCData::Thing::Types::Codablevalue.new
            
          
        
          
          @children['status'] = {:name => 'status', :class => HealthVault::WCData::Thing::Types::Codablevalue, :value => nil, :min => 0, :max => 1, :order => 2, :place => :element, :choice => 0 }
            
          
        
        end
      end
  end
  end
  
  end
end
