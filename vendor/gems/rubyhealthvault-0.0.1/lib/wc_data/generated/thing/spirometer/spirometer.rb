# -*- ruby -*-
#--
# Copyright 2008 Danny Coates, Ashkan Farhadtouski
# All rights reserved.
# See LICENSE for permissions.
#++
# AUTOGENERATED ComplexType

module HealthVault
  module WCData
  module Thing
  module Spirometer
  
      class Spirometer < ComplexType
        
  
			 
			 
       
        #<b>REQUIRED</b>
        #<b>summary</b>: The date and time when the spirometer reading was taken.
#<em>value</em> is a HealthVault::WCData::Dates::Datetime
        def when=(value)
          @children['when'][:value] = value
        end
        
        #<b>returns</b>: a HealthVault::WCData::Dates::Datetime
        def when
          return @children['when'][:value]
        end
       
  
			 
			 
       
        
        #<b>summary</b>: The forced expiratory volume in one second.
#<b>remarks</b>: FEV1 is the forced expiratory volume in one measured in liters/second.
#<em>value</em> is a HealthVault::WCData::Thing::Types::Flowvalue
        def fev1=(value)
          @children['fev1'][:value] = value
        end
        
        #<b>returns</b>: a HealthVault::WCData::Thing::Types::Flowvalue
        def fev1
          return @children['fev1'][:value]
        end
       
  
			 
			 
       
        
        #<b>summary</b>: The peak expirator flow.
#<b>remarks</b>: PEF is the peak expiratory flow measured in liters/second.
#<em>value</em> is a HealthVault::WCData::Thing::Types::Flowvalue
        def pef=(value)
          @children['pef'][:value] = value
        end
        
        #<b>returns</b>: a HealthVault::WCData::Thing::Types::Flowvalue
        def pef
          return @children['pef'][:value]
        end
       
  
			 
			 
       
        #<em>value</em> is a String
        def add_warning(value)
          @children['warning'][:value] << value
        end
        
        #<em>value</em> is a #String
        def remove_warning(value)
            @children['warning'][:value].delete(value)
        end
        
        
        #<b>summary</b>: The reading was not normal.
#<b>remarks</b>: The presence of one or more of these elements indicates that the reading was not normal. The element value should contain text describing the concern.
#<b>returns</b>: a String Array
        def warning
          return @children['warning'][:value]
        end
       
  
			 
			 
       
        #<em>value</em> is a String
        def add_problem(value)
          @children['problem'][:value] << value
        end
        
        #<em>value</em> is a #String
        def remove_problem(value)
            @children['problem'][:value].delete(value)
        end
        
        
        #<b>summary</b>: The reading was not normal and action should be taken.
#<b>remarks</b>: The presence of one or more of these elements indicates that the reading was not normal and that action should be taken. The element value should contain text describing the concern.
#<b>returns</b>: a String Array
        def problem
          return @children['problem'][:value]
        end
       
  
			 
			 
       
        
        #<b>summary</b>: The ratio of FEV 1 to FVC at the time of the reading.
#<b>remarks</b>: In healthy adults this should be approximately 75 - 80%.
#<em>value</em> is a HealthVault::WCData::Thing::Types::Percentage
        def fe_vover_fvc=(value)
          @children['FEVoverFVC'][:value] = value
        end
        
        #<b>returns</b>: a HealthVault::WCData::Thing::Types::Percentage
        def fe_vover_fvc
          return @children['FEVoverFVC'][:value]
        end
       
  
			 
			 
       
        
        #<b>summary</b>: The forced expiratory flow 25-75% at the time of the reading.
#<b>remarks</b>: This is the average flow (or speed) of air coming out of the lung during the middle portion of the expiration.
#<em>value</em> is a HealthVault::WCData::Thing::Types::Percentage
        def fef25to75=(value)
          @children['FEF25to75'][:value] = value
        end
        
        #<b>returns</b>: a HealthVault::WCData::Thing::Types::Percentage
        def fef25to75
          return @children['FEF25to75'][:value]
        end
       
  
			 
			 
       
        
        #<b>summary</b>: The forced expiratory flow 25-50% at the time of the reading.
#<b>remarks</b>: This is the average flow (or speed) of air coming out of the lung during the middle portion of the expiration.
#<em>value</em> is a HealthVault::WCData::Thing::Types::Percentage
        def fef25to50=(value)
          @children['FEF25to50'][:value] = value
        end
        
        #<b>returns</b>: a HealthVault::WCData::Thing::Types::Percentage
        def fef25to50
          return @children['FEF25to50'][:value]
        end
       
  
			 
			 
       
        
        #<b>summary</b>: The forced inspiratory flow 25-75% at the time of the reading.
#<b>remarks</b>: This is the average flow (or speed) of air coming into the lung during the middle portion of the inspiration.
#<em>value</em> is a HealthVault::WCData::Thing::Types::Percentage
        def fif25to75=(value)
          @children['FIF25to75'][:value] = value
        end
        
        #<b>returns</b>: a HealthVault::WCData::Thing::Types::Percentage
        def fif25to75
          return @children['FIF25to75'][:value]
        end
       
  
			 
			 
       
        
        #<b>summary</b>: The forced inspiratory flow 25-50% at the time of the reading.
#<b>remarks</b>: This is the average flow (or speed) of air coming into the lung during the middle portion of the inspiration.
#<em>value</em> is a HealthVault::WCData::Thing::Types::Percentage
        def fif25to50=(value)
          @children['FIF25to50'][:value] = value
        end
        
        #<b>returns</b>: a HealthVault::WCData::Thing::Types::Percentage
        def fif25to50
          return @children['FIF25to50'][:value]
        end
       
  
			 
			 
       
        
        #<b>summary</b>: The forced expiratory time at the time of the reading.
#<b>remarks</b>: This is the length of the expiration in seconds.
#<em>value</em> is a HealthVault::WCData::Thing::Types::PositiveDouble
        def fet=(value)
          @children['FET'][:value] = value
        end
        
        #<b>returns</b>: a HealthVault::WCData::Thing::Types::PositiveDouble
        def fet
          return @children['FET'][:value]
        end
       
  
			 
			 
       
        
        #<b>summary</b>: The slow vital capacity (SVC) at the time of the reading measured in liters (L).
#<b>remarks</b>: The patient inspires fully and than slowly expires all the air in his lungs or the other way around: the patient expires fully and inspires slowly to a maximum.
#<em>value</em> is a HealthVault::WCData::Thing::Spirometer::Volumevalue
        def svc=(value)
          @children['SVC'][:value] = value
        end
        
        #<b>returns</b>: a HealthVault::WCData::Thing::Spirometer::Volumevalue
        def svc
          return @children['SVC'][:value]
        end
       
  
			 
			 
       
        
        #<b>summary</b>: The tidal volume at the time of the reading, measured in liters (L).
#<b>remarks</b>: This is the specific volume of air is drawn into and then expired out of the lungs. Average flow (or speed) of air coming into the lung during the middle portion of the inspiration during the respiratory cycle.
#<em>value</em> is a HealthVault::WCData::Thing::Spirometer::Volumevalue
        def tv=(value)
          @children['TV'][:value] = value
        end
        
        #<b>returns</b>: a HealthVault::WCData::Thing::Spirometer::Volumevalue
        def tv
          return @children['TV'][:value]
        end
       
  
			 
			 
       
        
        #<b>summary</b>: The maximum voluntary ventilation (MVV) at the time of the reading, measured in liters per second (L/s).
#<b>remarks</b>: For this test the patient inspires and expires in the spirometer over and over again as fast as he can, during at least 12 seconds.
#<em>value</em> is a HealthVault::WCData::Thing::Types::Flowvalue
        def mvv=(value)
          @children['MVV'][:value] = value
        end
        
        #<b>returns</b>: a HealthVault::WCData::Thing::Types::Flowvalue
        def mvv
          return @children['MVV'][:value]
        end
       
  
      
        def initialize
          super
          self.tag_name = 'spirometer'
        
          
          @children['when'] = {:name => 'when', :class => HealthVault::WCData::Dates::Datetime, :value => nil, :min => 1, :max => 1, :order => 1, :place => :element, :choice => 0 }
            
          @children['when'][:value] = HealthVault::WCData::Dates::Datetime.new
            
          
        
          
          @children['fev1'] = {:name => 'fev1', :class => HealthVault::WCData::Thing::Types::Flowvalue, :value => nil, :min => 0, :max => 1, :order => 2, :place => :element, :choice => 0 }
            
          
        
          
          @children['pef'] = {:name => 'pef', :class => HealthVault::WCData::Thing::Types::Flowvalue, :value => nil, :min => 0, :max => 1, :order => 3, :place => :element, :choice => 0 }
            
          
        
          
          @children['warning'] = {:name => 'warning', :class => String, :value => Array.new, :min => 0, :max => 999999, :order => 4, :place => :element, :choice => 0 }
          
        
          
          @children['problem'] = {:name => 'problem', :class => String, :value => Array.new, :min => 0, :max => 999999, :order => 5, :place => :element, :choice => 0 }
          
        
          
          @children['FEVoverFVC'] = {:name => 'FEVoverFVC', :class => HealthVault::WCData::Thing::Types::Percentage, :value => nil, :min => 0, :max => 1, :order => 6, :place => :element, :choice => 0 }
            
          
        
          
          @children['FEF25to75'] = {:name => 'FEF25to75', :class => HealthVault::WCData::Thing::Types::Percentage, :value => nil, :min => 0, :max => 1, :order => 7, :place => :element, :choice => 0 }
            
          
        
          
          @children['FEF25to50'] = {:name => 'FEF25to50', :class => HealthVault::WCData::Thing::Types::Percentage, :value => nil, :min => 0, :max => 1, :order => 8, :place => :element, :choice => 0 }
            
          
        
          
          @children['FIF25to75'] = {:name => 'FIF25to75', :class => HealthVault::WCData::Thing::Types::Percentage, :value => nil, :min => 0, :max => 1, :order => 9, :place => :element, :choice => 0 }
            
          
        
          
          @children['FIF25to50'] = {:name => 'FIF25to50', :class => HealthVault::WCData::Thing::Types::Percentage, :value => nil, :min => 0, :max => 1, :order => 10, :place => :element, :choice => 0 }
            
          
        
          
          @children['FET'] = {:name => 'FET', :class => HealthVault::WCData::Thing::Types::PositiveDouble, :value => nil, :min => 0, :max => 1, :order => 11, :place => :element, :choice => 0 }
            
          
        
          
          @children['SVC'] = {:name => 'SVC', :class => HealthVault::WCData::Thing::Spirometer::Volumevalue, :value => nil, :min => 0, :max => 1, :order => 12, :place => :element, :choice => 0 }
            
          
        
          
          @children['TV'] = {:name => 'TV', :class => HealthVault::WCData::Thing::Spirometer::Volumevalue, :value => nil, :min => 0, :max => 1, :order => 13, :place => :element, :choice => 0 }
            
          
        
          
          @children['MVV'] = {:name => 'MVV', :class => HealthVault::WCData::Thing::Types::Flowvalue, :value => nil, :min => 0, :max => 1, :order => 14, :place => :element, :choice => 0 }
            
          
        
        end
      end
  end
  end
  
  end
end
