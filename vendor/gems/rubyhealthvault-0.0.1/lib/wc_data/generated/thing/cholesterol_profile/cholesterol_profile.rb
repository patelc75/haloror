# -*- ruby -*-
#--
# Copyright 2008 Danny Coates, Ashkan Farhadtouski
# All rights reserved.
# See LICENSE for permissions.
#++
# AUTOGENERATED ComplexType

module HealthVault
  module WCData
  module Thing
  module Cholesterolprofile
  
      class Cholesterolprofile < ComplexType
        
  
			 
			 
       
        #<b>REQUIRED</b>
        #<b>summary</b>: The date when the samples that led to this test result were taken.
#<em>value</em> is a HealthVault::WCData::Dates::Date
        def when=(value)
          @children['when'][:value] = value
        end
        
        #<b>returns</b>: a HealthVault::WCData::Dates::Date
        def when
          return @children['when'][:value]
        end
       
  
			 
			 
       
        
        #<b>summary</b>: Low density lipoprotein cholesterol.
#<b>remarks</b>: The LDL test measures how much low-density lipoprotein (LDL) cholesterol in the blood. Increased levels of LDL cholesterol is associated with atherosclerosis. LDL cholesterol is measured in mg/dL.
#<em>value</em> is a String
        def ldl=(value)
          @children['ldl'][:value] = value
        end
        
        #<b>returns</b>: a String
        def ldl
          return @children['ldl'][:value]
        end
       
  
			 
			 
       
        
        #<b>summary</b>: High density lipoprotein cholesterol.
#<b>remarks</b>: HDL stands for high density lipoprotein cholesterol, a form of "good" cholesterol. Proteins in the blood that move cholesterol, triglycerides, and other lipids to various tissues are lipoproteins. HDL cholesterol is measured in mg/dL.
#<em>value</em> is a String
        def hdl=(value)
          @children['hdl'][:value] = value
        end
        
        #<b>returns</b>: a String
        def hdl
          return @children['hdl'][:value]
        end
       
  
			 
			 
       
        
        #<b>summary</b>: Total cholesterol.
#<b>remarks</b>: A total cholesterol test is a rough measure of all the cholesterol and triglycerides in your blood. Total cholesterol is measured in mg/dL.
#<em>value</em> is a String
        def total_cholesterol=(value)
          @children['total-cholesterol'][:value] = value
        end
        
        #<b>returns</b>: a String
        def total_cholesterol
          return @children['total-cholesterol'][:value]
        end
       
  
			 
			 
       
        
        #<b>summary</b>: Triglyceride level.
#<b>remarks</b>: Triglycerides are a type of fat. Your body makes some triglycerides. Triglycerides also come from the food you eat. Triglycerides are measured in mg/dL.
#<em>value</em> is a String
        def triglyceride=(value)
          @children['triglyceride'][:value] = value
        end
        
        #<b>returns</b>: a String
        def triglyceride
          return @children['triglyceride'][:value]
        end
       
  
      
        def initialize
          super
          self.tag_name = 'cholesterol-profile'
        
          
          @children['when'] = {:name => 'when', :class => HealthVault::WCData::Dates::Date, :value => nil, :min => 1, :max => 1, :order => 1, :place => :element, :choice => 0 }
            
          @children['when'][:value] = HealthVault::WCData::Dates::Date.new
            
          
        
          
          @children['ldl'] = {:name => 'ldl', :class => String, :value => nil, :min => 0, :max => 1, :order => 2, :place => :element, :choice => 0 }
            
          
        
          
          @children['hdl'] = {:name => 'hdl', :class => String, :value => nil, :min => 0, :max => 1, :order => 3, :place => :element, :choice => 0 }
            
          
        
          
          @children['total-cholesterol'] = {:name => 'total-cholesterol', :class => String, :value => nil, :min => 0, :max => 1, :order => 4, :place => :element, :choice => 0 }
            
          
        
          
          @children['triglyceride'] = {:name => 'triglyceride', :class => String, :value => nil, :min => 0, :max => 1, :order => 5, :place => :element, :choice => 0 }
            
          
        
        end
      end
  end
  end
  
  end
end
