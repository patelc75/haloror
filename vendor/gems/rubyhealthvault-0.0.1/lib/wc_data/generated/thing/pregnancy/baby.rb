# -*- ruby -*-
#--
# Copyright 2008 Danny Coates, Ashkan Farhadtouski
# All rights reserved.
# See LICENSE for permissions.
#++
# AUTOGENERATED ComplexType

module HealthVault
  module WCData
  module Thing
  module Pregnancy
  
      class Baby < ComplexType
        
  
			 
			 
       
        
        #<b>summary</b>: The name of the baby.
#<em>value</em> is a HealthVault::WCData::Thing::Types::Name
        def name=(value)
          @children['name'][:value] = value
        end
        
        #<b>returns</b>: a HealthVault::WCData::Thing::Types::Name
        def name
          return @children['name'][:value]
        end
       
  
			 
			 
       
        
        #<b>summary</b>: The gender of the baby.
#<b>preferred-vocabulary</b>: gender-types
#<em>value</em> is a HealthVault::WCData::Thing::Types::Codablevalue
        def gender=(value)
          @children['gender'][:value] = value
        end
        
        #<b>returns</b>: a HealthVault::WCData::Thing::Types::Codablevalue
        def gender
          return @children['gender'][:value]
        end
       
  
			 
			 
       
        
        #<b>summary</b>: The birth weight of the baby.
#<em>value</em> is a HealthVault::WCData::Thing::Types::Weightvalue
        def weight=(value)
          @children['weight'][:value] = value
        end
        
        #<b>returns</b>: a HealthVault::WCData::Thing::Types::Weightvalue
        def weight
          return @children['weight'][:value]
        end
       
  
			 
			 
       
        
        #<b>summary</b>: The birth length of the baby.
#<em>value</em> is a HealthVault::WCData::Thing::Types::Lengthvalue
        def length=(value)
          @children['length'][:value] = value
        end
        
        #<b>returns</b>: a HealthVault::WCData::Thing::Types::Lengthvalue
        def length
          return @children['length'][:value]
        end
       
  
			 
			 
       
        
        #<b>summary</b>: The circumference of the baby's head.
#<em>value</em> is a HealthVault::WCData::Thing::Types::Lengthvalue
        def head_circumference=(value)
          @children['head-circumference'][:value] = value
        end
        
        #<b>returns</b>: a HealthVault::WCData::Thing::Types::Lengthvalue
        def head_circumference
          return @children['head-circumference'][:value]
        end
       
  
			 
			 
       
        
        #<b>summary</b>: Additional information about the baby.
#<em>value</em> is a String
        def note=(value)
          @children['note'][:value] = value
        end
        
        #<b>returns</b>: a String
        def note
          return @children['note'][:value]
        end
       
  
      
        def initialize
          super
          self.tag_name = 'baby'
        
          
          @children['name'] = {:name => 'name', :class => HealthVault::WCData::Thing::Types::Name, :value => nil, :min => 0, :max => 1, :order => 1, :place => :element, :choice => 0 }
            
          
        
          
          @children['gender'] = {:name => 'gender', :class => HealthVault::WCData::Thing::Types::Codablevalue, :value => nil, :min => 0, :max => 1, :order => 2, :place => :element, :choice => 0 }
            
          
        
          
          @children['weight'] = {:name => 'weight', :class => HealthVault::WCData::Thing::Types::Weightvalue, :value => nil, :min => 0, :max => 1, :order => 3, :place => :element, :choice => 0 }
            
          
        
          
          @children['length'] = {:name => 'length', :class => HealthVault::WCData::Thing::Types::Lengthvalue, :value => nil, :min => 0, :max => 1, :order => 4, :place => :element, :choice => 0 }
            
          
        
          
          @children['head-circumference'] = {:name => 'head-circumference', :class => HealthVault::WCData::Thing::Types::Lengthvalue, :value => nil, :min => 0, :max => 1, :order => 5, :place => :element, :choice => 0 }
            
          
        
          
          @children['note'] = {:name => 'note', :class => String, :value => nil, :min => 0, :max => 1, :order => 6, :place => :element, :choice => 0 }
            
          
        
        end
      end
  end
  end
  
  end
end
