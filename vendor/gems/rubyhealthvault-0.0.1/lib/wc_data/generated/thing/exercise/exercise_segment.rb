# -*- ruby -*-
#--
# Copyright 2008 Danny Coates, Ashkan Farhadtouski
# All rights reserved.
# See LICENSE for permissions.
#++
# AUTOGENERATED ComplexType

module HealthVault
  module WCData
  module Thing
  module Exercise
  
      class ExerciseSegment < ComplexType
        
  
			 
			 
       
        #<b>REQUIRED</b>
        #<b>summary</b>: The type of activity for this segment.
#<em>value</em> is a HealthVault::WCData::Thing::Types::Codablevalue
        def activity=(value)
          @children['activity'][:value] = value
        end
        
        #<b>returns</b>: a HealthVault::WCData::Thing::Types::Codablevalue
        def activity
          return @children['activity'][:value]
        end
       
  
			 
			 
       
        
        #<b>summary</b>: A descriptive title for this segment.
#<b>remarks</b>: Examples: Lap 1, bicycle leg, first half.
#<em>value</em> is a String
        def title=(value)
          @children['title'][:value] = value
        end
        
        #<b>returns</b>: a String
        def title
          return @children['title'][:value]
        end
       
  
			 
			 
       
        
        #<b>summary</b>: The distance covered in the segment.
#<b>remarks</b>: Distances are stored in meters. The application must convert the distance entered by the user into meters and should also store the distance and units entered by the user in the display-value so that it can be displayed to the user in their preferred unit of measure when viewing the data.
#<em>value</em> is a HealthVault::WCData::Thing::Types::Lengthvalue
        def distance=(value)
          @children['distance'][:value] = value
        end
        
        #<b>returns</b>: a HealthVault::WCData::Thing::Types::Lengthvalue
        def distance
          return @children['distance'][:value]
        end
       
  
			 
			 
       
        
        #<b>summary</b>: The duration of this segment in minutes.
#<em>value</em> is a HealthVault::WCData::Thing::Types::PositiveDouble
        def duration=(value)
          @children['duration'][:value] = value
        end
        
        #<b>returns</b>: a HealthVault::WCData::Thing::Types::PositiveDouble
        def duration
          return @children['duration'][:value]
        end
       
  
			 
			 
       
        
        #<b>summary</b>: The offset of this segment from the start of the exercise, measured in minutes.
#<em>value</em> is a HealthVault::WCData::Thing::Types::NonNegativeDouble
        def offset=(value)
          @children['offset'][:value] = value
        end
        
        #<b>returns</b>: a HealthVault::WCData::Thing::Types::NonNegativeDouble
        def offset
          return @children['offset'][:value]
        end
       
  
			 
			 
       
        #<em>value</em> is a HealthVault::WCData::Thing::Exercise::StructuredNameValue
        def add_detail(value)
          @children['detail'][:value] << value
        end
        
        #<em>value</em> is a #HealthVault::WCData::Thing::Exercise::StructuredNameValue
        def remove_detail(value)
            @children['detail'][:value].delete(value)
        end
        
        
        #<b>summary</b>: Additional information about the segment.
#<b>returns</b>: a HealthVault::WCData::Thing::Exercise::StructuredNameValue Array
        def detail
          return @children['detail'][:value]
        end
       
  
      
        def initialize
          super
          self.tag_name = 'exercisesegment'
        
          
          @children['activity'] = {:name => 'activity', :class => HealthVault::WCData::Thing::Types::Codablevalue, :value => nil, :min => 1, :max => 1, :order => 1, :place => :element, :choice => 0 }
            
          @children['activity'][:value] = HealthVault::WCData::Thing::Types::Codablevalue.new
            
          
        
          
          @children['title'] = {:name => 'title', :class => String, :value => nil, :min => 0, :max => 1, :order => 2, :place => :element, :choice => 0 }
            
          
        
          
          @children['distance'] = {:name => 'distance', :class => HealthVault::WCData::Thing::Types::Lengthvalue, :value => nil, :min => 0, :max => 1, :order => 3, :place => :element, :choice => 0 }
            
          
        
          
          @children['duration'] = {:name => 'duration', :class => HealthVault::WCData::Thing::Types::PositiveDouble, :value => nil, :min => 0, :max => 1, :order => 4, :place => :element, :choice => 0 }
            
          
        
          
          @children['offset'] = {:name => 'offset', :class => HealthVault::WCData::Thing::Types::NonNegativeDouble, :value => nil, :min => 0, :max => 1, :order => 5, :place => :element, :choice => 0 }
            
          
        
          
          @children['detail'] = {:name => 'detail', :class => HealthVault::WCData::Thing::Exercise::StructuredNameValue, :value => Array.new, :min => 0, :max => 999999, :order => 6, :place => :element, :choice => 0 }
          
        
        end
      end
  end
  end
  
  end
end
