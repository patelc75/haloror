# -*- ruby -*-
#--
# Copyright 2008 Danny Coates, Ashkan Farhadtouski
# All rights reserved.
# See LICENSE for permissions.
#++
# AUTOGENERATED ComplexType

module HealthVault
  module WCData
  module Thing
  module Password
  module Protected
  module Package
  
      class PbeParametersType < ComplexType
        
  
			 
			 
       
        #<b>REQUIRED</b>
        #<b>summary</b>: Salt used when hashing the value.
#<b>remarks</b>: The value for this element is application dependent, but to support consistency we suggest that the salt be a base64 encoded series of bytes matching the length requirement of the algorithm. For instance, 64 bytes for sha1 and sha256.
#<em>value</em> is a String
        def salt=(value)
          @children['salt'][:value] = value
        end
        
        #<b>returns</b>: a String
        def salt
          return @children['salt'][:value]
        end
       
  
			 
			 
       
        #<b>REQUIRED</b>
        #<b>summary</b>: The number of iterations used when hashing the data.
#<em>value</em> is a String
        def iteration_count=(value)
          @children['iteration-count'][:value] = value
        end
        
        #<b>returns</b>: a String
        def iteration_count
          return @children['iteration-count'][:value]
        end
       
  
			 
			 
       
        #<b>REQUIRED</b>
        #<b>summary</b>: The key length in bits used.
#<b>remarks</b>: The value depends on encryption algorithm. The default is 168 for 3DES and 256 for aes256.
#<em>value</em> is a String
        def key_length=(value)
          @children['key-length'][:value] = value
        end
        
        #<b>returns</b>: a String
        def key_length
          return @children['key-length'][:value]
        end
       
  
      
        def initialize
          super
          self.tag_name = 'pbeparameterstype'
        
          
          @children['salt'] = {:name => 'salt', :class => String, :value => nil, :min => 1, :max => 1, :order => 1, :place => :element, :choice => 0 }
            
          @children['salt'][:value] = String.new
            
          
        
          
          @children['iteration-count'] = {:name => 'iteration-count', :class => String, :value => nil, :min => 1, :max => 1, :order => 2, :place => :element, :choice => 0 }
            
          @children['iteration-count'][:value] = String.new
            
          
        
          
          @children['key-length'] = {:name => 'key-length', :class => String, :value => nil, :min => 1, :max => 1, :order => 3, :place => :element, :choice => 0 }
            
          @children['key-length'][:value] = String.new
            
          
        
        end
      end
  end
  end
  end
  end
  
  end
end
